(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{641:function(t,a,s){"use strict";s.r(a);var e=s(55),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"watch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[t._v("#")]),t._v(" Watch")]),t._v(" "),s("p",[t._v("webpack 可以监听文件的改动，并且重新编译。本节我们就来看看如何配置。")]),t._v(" "),s("h2",{attrs:{id:"开启文件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启文件监听"}},[t._v("#")]),t._v(" 开启文件监听")]),t._v(" "),s("p",[t._v("要开启文件监听很简单：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  watch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面的配置结果是，webpack 在初次打包后，会继续的监听文件的变化，一有修改就会重新编译打包。")]),t._v(" "),s("p",[t._v("值得注意的是，在 webpack-dev-server 和 webpack-dev-middleware 中 watch 是默认为 true 的。这也是我们配置 devServer 时，不需要配置 watch 的原因（但是你可以配置 devServer.watchOptions ）。")]),t._v(" "),s("h2",{attrs:{id:"配置监听选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置监听选项"}},[t._v("#")]),t._v(" 配置监听选项")]),t._v(" "),s("p",[t._v("webpack 提供了一个 watchOptions 配置项，可以让我们控制监听的一些行为。")]),t._v(" "),s("h3",{attrs:{id:"aggregatetimeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aggregatetimeout"}},[t._v("#")]),t._v(" aggregateTimeout")]),t._v(" "),s("p",[t._v("它是一个数字类型的值。它表示在上一次构建后，等待多少毫秒去收集本次的更新，然后聚合到一次构建中。"),s("strong",[t._v("它的单位值是毫秒。")]),t._v(" 通俗的理解，就是前后两次构建的等待时间。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  watch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  watchOptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    aggregateTimeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示每隔两秒构建一次（如果有文件修改的话）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"ignored"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ignored"}},[t._v("#")]),t._v(" ignored")]),t._v(" "),s("p",[t._v("忽略哪些文件的监听。一般为了性能需要，我们会忽略那些包含很多文件的目录，比如 node_modules。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  watch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  watchOptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ignored: '/node_modules/', // 正则形式")]),t._v("\n    ignored"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'files/**/*.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node_modules/**'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组形式（使用 anymatch 模式匹配）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"poll"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#poll"}},[t._v("#")]),t._v(" poll")]),t._v(" "),s("p",[t._v("是否轮询。它为 true 的话表示开启轮询，为 false 的话表示关闭轮询，默认是 false。它也可以是一个数字，表示轮询的时间间隔。")]),t._v(" "),s("p",[t._v("如果监听模式不起作用的话，可以尝试一下这个选项。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  watch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  watchOptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    poll"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"info-verbosity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#info-verbosity"}},[t._v("#")]),t._v(" info-verbosity")]),t._v(" "),s("p",[t._v("这是一个命令行选项，只能在命令行运行，用来控制监听时的日志显示。")]),t._v(" "),s("p",[t._v("它的选项可以是 none, verbose, info。比如下面的命令就表示不输出相关的日志信息：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("webpack --watch --info-verbosity none\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);