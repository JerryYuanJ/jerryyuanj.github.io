(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{589:function(t,a,r){"use strict";r.r(a);var s=r(55),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),r("h2",{attrs:{id:"什么是缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是缓存"}},[t._v("#")]),t._v(" 什么是缓存")]),t._v(" "),r("p",[t._v("缓存是一种保存资源的副本在本地并且在下次请求时使用这个副本的一项技术。有了这个副本，当再次请求时，就不会向源服务器去发送请求重新下载该资源，而是直接使用这个副本，"),r("strong",[t._v("它可以有效的缓解服务器的压力，提升网页获取数据的性能。")])]),t._v(" "),r("p",[t._v("根据使用者的不同，缓存可以分为两大类，一种是"),r("strong",[t._v("私有缓存")]),t._v("，一种是"),r("strong",[t._v("共享缓存")]),t._v("。私有缓存一般是我们的浏览器缓存，它只只能作用于单个用户；而共享缓存一般则是代理缓存，它可以被多个用户使用，比如我们常见的CDN服务器就是一种代理缓存服务器。")]),t._v(" "),r("h2",{attrs:{id:"强缓存与协商缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#强缓存与协商缓存"}},[t._v("#")]),t._v(" 强缓存与协商缓存")]),t._v(" "),r("p",[t._v("浏览器缓存可以分为两种类型：强缓存于协商缓存。强缓存也叫本地缓存，当浏览器在请求某一个资源时，发现它的header信息命中强缓存的条件，那么浏览器会直接使用本地的缓存，不会发出任何请求向服务器获取资源；而协商缓存就不同，当满足条件时，浏览器会发送一个请求到服务器上，由服务器来决定浏览器是否使用本地缓存，可以将这个过程当作是浏览器和服务器的一次关于是否可以使用缓存的协商的过程。")]),t._v(" "),r("h3",{attrs:{id:"强缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),r("h3",{attrs:{id:"协商缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")])])}),[],!1,null,null,null);a.default=e.exports}}]);