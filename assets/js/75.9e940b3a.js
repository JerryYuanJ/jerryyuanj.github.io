(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{607:function(t,v,_){"use strict";_.r(v);var n=_(55),l=Object(n.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("Snabbdom 是一个 "),_("strong",[t._v("virtual DOM")]),t._v(" 的实现库。它的实现非常简单，核心代码只有大约200行，并且通过模块机制提供了强大的扩展性。它的具体介绍如下：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("核心功能")]),t._v(" "),_("ul",[_("li",[t._v("大约200行代码 -- 您可以轻松地阅读整个内核并完全理解它的工作原理。")]),t._v(" "),_("li",[t._v("可以通过模块扩展。")]),t._v(" "),_("li",[t._v("每个vnode和模块都有一组丰富的钩子，可以钩入到 diff 和 patch 过程的任何部分。")]),t._v(" "),_("li",[t._v("极好的性能。Snabbdom是虚拟DOM基准测试中速度最快的虚拟DOM库之一。")]),t._v(" "),_("li",[t._v("Patch 函数具有函数签名，等同于 reduce/scan 函数。可以更容易地与FRP库集成。")])])]),t._v(" "),_("li",[_("p",[t._v("模块功能")]),t._v(" "),_("ul",[_("li",[t._v("h 函数可以很方便创建虚拟 DOM 节点。")]),t._v(" "),_("li",[t._v("h 函数也可以操作 SVG。")]),t._v(" "),_("li",[t._v("操作复杂的 CSS 动画的功能。")]),t._v(" "),_("li",[t._v("强大的事件监听器功能。")]),t._v(" "),_("li",[t._v("thunk 函数可以进一步优化 diff 和 patch 过程。")])])])]),t._v(" "),_("p",[t._v("本章我们就由浅入深的学习 snabbdom 的使用，并且从源码的角度作出详细的分析，读者看之前可以先根据 "),_("a",{attrs:{href:"https://github.com/snabbdom/snabbdom",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方仓库"),_("OutboundLink")],1),t._v(" 的文档自己上手一下这个库，了解它的基本使用。")])])}),[],!1,null,null,null);v.default=l.exports}}]);