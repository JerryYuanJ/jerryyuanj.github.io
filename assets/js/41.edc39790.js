(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{558:function(a,s,t){"use strict";t.r(s);var e=t(55),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"docker-常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用命令"}},[a._v("#")]),a._v(" Docker 常用命令")]),a._v(" "),t("h3",{attrs:{id:"镜像操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像操作"}},[a._v("#")]),a._v(" 镜像操作")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("拉取镜像到本地： "),t("code",[a._v("docker pull IMAGE_NAME[:IMAGE_TAG]")])])]),a._v(" "),t("li",[t("p",[a._v("查看本地全部镜像： "),t("code",[a._v("docker images")])])]),a._v(" "),t("li",[t("p",[a._v("删除本地镜像："),t("code",[a._v("docker rmi IMAGE_ID")])])]),a._v(" "),t("li",[t("p",[a._v("导出本地镜像")])])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker save -o OUTPUT_PATH IMAGE_ID\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 比如：`docker save -o ./tomcat-img 123456`")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 表示将镜像 id 为 123456 的镜像，导出到当前目录下，并且名称为 tomcat-img。")]),a._v("\n")])])]),t("ul",[t("li",[a._v("导入（加载）本地的镜像")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker load -i IMAGE_FILE\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 比如加载上面的镜像：`docker load -i ./tomcat-img`")]),a._v("\n")])])]),t("ul",[t("li",[a._v("给镜像命名：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker tag IMAGE_ID NEW_IMAGE_NAME:IMAGE_TAG\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker tag 123 tomcat-xxx:8.8")]),a._v("\n")])])]),t("h3",{attrs:{id:"容器的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器的操作"}},[a._v("#")]),a._v(" 容器的操作")]),a._v(" "),t("ul",[t("li",[a._v("运行容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker run IMAGE_ID  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 会运行本地的")]),a._v("\ndocker run IMAGE_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":IMAGE_TAG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行本地的；如果在本地找不到，会去中央仓库下载镜像然后运行")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -d: 后台运行容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -p: 宿主机端口:容器端口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# --name 指定容器名称")]),a._v("\ndocker run -d -p HOST_PORT:CONTAINER_PORT --name CONTAINER_NAME IMAGE_ID"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("IMAGE_NAME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":IMAGE_TAG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("ul",[t("li",[a._v("查看正在运行的容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -q: 只查看容器的标识，不查看其他信息")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -a: 查看全部的容器，包括没有运行的")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("qa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("ul",[t("li",[a._v("查看容器的日志")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可以滚动查看日志的最后几行")]),a._v("\ndocker logs -f CONTAINER_ID\n")])])]),t("ul",[t("li",[a._v("进入容器内部")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it CONTAINER_ID\n")])])]),t("ul",[t("li",[a._v("停止容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker stop CONTAINER_ID\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止全部容器")]),a._v("\ndocker stop "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -qa"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("ul",[t("li",[a._v("启动容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker start CONTAINER_ID\n")])])]),t("ul",[t("li",[a._v("删除容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" CONTAINER_ID\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除全部容器")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -qa"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("ul",[t("li",[a._v("将宿主机的文件拷贝进容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将 xxx.zip 放到容器 CONTAINER_ID 的 PATH_TO_PUT 路径下")]),a._v("\ndocker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" xxx.zip CONTAINER_ID:PATH_TO_PUT\n")])])]),t("h3",{attrs:{id:"数据卷操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据卷操作"}},[a._v("#")]),a._v(" 数据卷操作")]),a._v(" "),t("ul",[t("li",[a._v("创建数据卷")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker volume create VOLUME_NAME\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 默认会存放在 /var/lib/docker/volumns/VOLUME_NAME/_data")]),a._v("\n")])])]),t("ul",[t("li",[a._v("查看数据卷")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看某一个数据卷的详细信息")]),a._v("\ndocker volume inspect VOLUME_NAME\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看全部的数据卷")]),a._v("\ndocker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),t("ul",[t("li",[a._v("删除数据卷")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("docker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" VOLUME_NAME\n")])])]),t("ul",[t("li",[a._v("应用（映射）数据卷")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 把数据卷和容器内部的路径做映射")]),a._v("\ndocker run -v VOLUME_NAME:CONTAINER_INNER_PATH "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 把 HOST_PATH 和 CONTAINER_INNER_PATH 做映射")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 HOST_PATH 不存在，docker 会为你创建")]),a._v("\ndocker run -v HOST_PATH:CONTAINER_INNER_PATH "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);