(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{490:function(e,t,o){e.exports=o.p+"assets/img/cookie.63a491fc.png"},591:function(e,t,o){"use strict";o.r(t);var a=o(55),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" Cookie")]),e._v(" "),a("h2",{attrs:{id:"什么是cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是cookie"}},[e._v("#")]),e._v(" 什么是Cookie")]),e._v(" "),a("p",[e._v("我们知道，HTTP是无状态的协议，也就是说，如果你在访问某个网站，单从HTTP协议的角度来说，网站的服务器是不知道你的上一次请求情况的。但是我们很多场景都需要我们的服务器记住用户之前的某些操作，举个很常见的例子，当我们登陆淘宝时，浏览不同的页面，淘宝不会让我们重复的登陆，这就说明它记录下了我们的登陆状态。实现这个功能有很多种方式，其中一种就是"),a("strong",[e._v("Cookie")]),e._v("机制。")]),e._v(" "),a("p",[e._v("HTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的"),a("strong",[e._v("一小块数据")]),e._v("，它会在浏览器下次再次发送请求时，"),a("strong",[e._v("满足条件的情况下")]),e._v("，随着请求报文一并发送到服务器上。"),a("strong",[e._v("Cookie 使基于无状态的HTTP协议记录稳定的状态信息成为了可能。")])]),e._v(" "),a("h2",{attrs:{id:"cookie的简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie的简单使用"}},[e._v("#")]),e._v(" Cookie的简单使用")]),e._v(" "),a("p",[e._v("服务器会在响应头部"),a("strong",[e._v("Set-Cookie")]),e._v("中设置相应的Cookie值，比如：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" sid=123456\n")])])]),a("p",[e._v("上面的头部就会设置一个名称为"),a("code",[e._v("sid")]),e._v("，值为"),a("code",[e._v("123456")]),e._v("的Cookie值到我们的浏览器上。浏览器在下一次往相同服务器发送请求时，会在"),a("code",[e._v("Cookie")]),e._v("的请求头部上带上这个信息：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" sid=123456\n")])])]),a("p",[e._v("同时，你可以通过js来获取这个cookie的值：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cookie "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 输出 sid=123456")]),e._v("\n")])])]),a("p",[e._v("我们也可以通过Chrome DevTools中的Application面板看到网站的cookies，例如github的网站上的cookies如图所示：")]),e._v(" "),a("p",[a("img",{attrs:{src:o(490),alt:"Cookies"}})]),e._v(" "),a("h2",{attrs:{id:"cookie详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie详解"}},[e._v("#")]),e._v(" Cookie详解")]),e._v(" "),a("p",[e._v("关于Cookie，除了名称和值这两个字段外，它有如下几个比较重要的标记信息：")]),e._v(" "),a("ol",[a("li",[a("strong",[e._v("过期时间："),a("code",[e._v("Expire/Max-Age")])])])]),e._v(" "),a("p",[e._v("根据Cookie是否携带过期时间，我们通常将Cookie分为两类："),a("strong",[e._v("会话期Cookie")]),e._v("和"),a("strong",[e._v("持久性Cookie")]),e._v("。会话期Cookie的生命周期仅存于会话期，即关闭网页或者浏览器，这个Cookie就会被删除；而持久性Cookie则会在到期之前一直有效，不论浏览器是否关闭，"),a("strong",[e._v("它的时间是相对于客户端而言的")]),e._v("。")]),e._v(" "),a("p",[a("code",[e._v("Expire")]),e._v("和"),a("code",[e._v("Max-Age")]),e._v("都是用来表示过期时间的，不同的是，"),a("code",[e._v("Expires")]),e._v("的值是一个具体的日期值，它表示该Cookie在该日期之前都有效；"),a("code",[e._v("Max-Age")]),e._v("的值是一个数字，它表示经过多少"),a("strong",[e._v("秒")]),e._v("这个cookie会失效，这个属性在一些老的浏览器不支持。如果"),a("code",[e._v("Expires")]),e._v("和"),a("code",[e._v("Max-Age")]),e._v("都存在，并且在浏览器都支持的情况下，"),a("code",[e._v("Max-Age")]),e._v("的优先级要高。例如：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" id=12; Expires=Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" 21 Jan 2020 07"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("28"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("00 GMT\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" id=123; Max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("Age=10000\n")])])]),a("p",[e._v("上面设置了名为"),a("code",[e._v("id")]),e._v("的cookie，它设置的失效时间"),a("code",[e._v("Expires")]),e._v("为2020年1月21日07:28:00，生效时长"),a("code",[e._v("Max-Age")]),e._v("为10秒，假设浏览器对于这两个属性都支持的话，那么"),a("code",[e._v("Max-Age")]),e._v("的值将会被采用，也就是说，这个cookie将会在10秒后失效。")]),e._v(" "),a("p",[a("strong",[e._v("如果要手动的删除某个某个cookie的值，可以将它的Expires属性设置为一个过去的时间点，或者Max-Age属性设置为0或-1。")])]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[e._v("Secure")])])]),e._v(" "),a("p",[e._v("设置为"),a("code",[e._v("Secure")]),e._v("的Cookie，只会在"),a("strong",[e._v("https")]),e._v("的环境下被发送给服务端。但是要注意的是，即使在https环境下，敏感信息也"),a("strong",[e._v("不应该")]),e._v("通过Cookie传输。")]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[e._v("HttpOnly")])])]),e._v(" "),a("p",[e._v("我们知道，JavaScript的API"),a("code",[e._v("document.cookie")]),e._v("可以获取当前网站下的cookie。如果你不想让js来获取某一个cookie值时，给这个cookie加上"),a("code",[e._v("HttpOnly")]),e._v("的标记即可，例如：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" id=1; Secure; HttpOnly; \n")])])]),a("p",[e._v("这个名称为"),a("code",[e._v("id")]),e._v("的cookie，通过js是获取不到的。")]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[e._v("Domain")])])]),e._v(" "),a("p",[e._v("指定Cookie对于哪个域是有效的。如果没有指定的话，默认值就是当前网页的URL（不包含子域）；反之如果指定的话，那么各个子域也包含这个Cookie。比如：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" sid=123; Domain=test.com\n")])])]),a("p",[e._v("上例设置了一个名称为"),a("code",[e._v("sid")]),e._v("的cookie，它对于域名为"),a("code",[e._v("test.com")]),e._v("的域都是有效的，当然也包括它的子域，即我们在"),a("code",[e._v("a.test.com")]),e._v("或者"),a("code",[e._v("b.test.com")]),e._v("中，都可以访问到这个cookie。")]),e._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[e._v("Path")])])]),e._v(" "),a("p",[e._v("指定对于域中的某一路径，在这个路径下才会向服务器发送cookie。例如：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" sid=123; Path=/test; Domain=www.test.com\n")])])]),a("p",[e._v("这里例子中，我们设置了名为"),a("code",[e._v("sid")]),e._v("的cookie，它会在域名为"),a("code",[e._v("www.test.com")]),e._v("，路径为"),a("code",[e._v("/test")]),e._v("的url下才会生效，比如我们请求一个资源，它的路径为"),a("code",[e._v("http://www.test.com/test")]),e._v("或者子路径"),a("code",[e._v("http://www.test.com/test/images/1.png")]),e._v("，那么这个cookie就会被发送。")]),e._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("strong",[e._v("SameSite")])])]),e._v(" "),a("p",[e._v("这个属性早在Chrome51的时候就被引入了，它的初衷是为了阻止CSRF攻击。"),a("code",[e._v("SameSite")]),e._v("的值可以为下面的三个之一：")]),e._v(" "),a("ol",[a("li",[e._v("Strict")])]),e._v(" "),a("p",[e._v("这是要求最严格的，完全禁止第三方Cookie，只有当前网页URL与请求目标一致，才会发送Cookie。这个属性带来的用户体验非常不好，举个例子，你登陆淘宝后，假设淘宝网给你的Cookie设置的是"),a("code",[e._v("SameSite=Strict")]),e._v("，这时候你点击网站的商品准备看看详情，Oops，你又得重新登陆才可以继续进行你的操作，因为跳转的时候，淘宝的Cookie是不会附带到请求上去的。")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Lax")])]),e._v(" "),a("p",[a("code",[e._v("Lax")]),e._v("的要求则没有这么严格，但是大部分情况下它也是不发送Cookie的，除非是一些导航到目标网址的"),a("code",[e._v("GET")]),e._v("请求。这里的重点是："),a("code",[e._v("GET")]),e._v("方法，而且必须是可以造成顶级导航的"),a("code",[e._v("GET")]),e._v("方法，只有这样，"),a("code",[e._v("Lax")]),e._v("的Cookie才会被发送。")]),e._v(" "),a("p",[e._v("关于什么是“造成顶级导航”，这里解释一下。资源可以通过"),a("code",[e._v("img")]),e._v("、"),a("code",[e._v("iframe")]),e._v("、"),a("code",[e._v("script")]),e._v("标签进行加载，这些都可以通过"),a("code",[e._v("GET")]),e._v("请求来获取，但是它们都不会造成顶级的导航改变。基本上，它们不会更改地址栏中的URL，所以它们发出的请求，都不会带上"),a("code",[e._v("Lax")]),e._v("的Cookie。可以参考下面的表格：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("请求类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"center"}},[e._v("示例代码")]),e._v(" "),a("th",{staticStyle:{"text-align":"right"}},[e._v("发送的Cookie")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Link")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('<a href="..."></a>')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal, Lax")])]),e._v(" "),a("tr",[a("td",[e._v("Perender")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('<link rel="prerender" href=".."/>')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal, Lax")])]),e._v(" "),a("tr",[a("td",[e._v("Form GET")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('<form method="GET" action="...">')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal, Lax")])]),e._v(" "),a("tr",[a("td",[e._v("Form POST")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('<form method="POST" action="...">')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal")])]),e._v(" "),a("tr",[a("td",[e._v("iframe")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('<iframe src="..."></iframe>')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal")])]),e._v(" "),a("tr",[a("td",[e._v("AJAX")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('$.get("...")')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal")])]),e._v(" "),a("tr",[a("td",[e._v("Image")]),e._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[e._v('<img src="...">')])]),e._v(" "),a("td",{staticStyle:{"text-align":"right"}},[e._v("Normal")])])])]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("None")])]),e._v(" "),a("p",[e._v("浏览器会在同站请求、跨站请求下继续发送cookie。不过最近由谷歌发出的提议，如果Cookie的"),a("code",[e._v("SameSite=None")]),e._v("，那么它必须包含"),a("code",[e._v("Secure")]),e._v("标记，比如：")]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" widget_session=abc123; SameSite=None // 这是一个无效的Cookie\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("Set-Cookie")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" widget_session=abc123; SameSite=None; Secure // 有效\n")])])]),a("h2",{attrs:{id:"cookie的限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie的限制"}},[e._v("#")]),e._v(" Cookie的限制")]),e._v(" "),a("p",[e._v("Cookie的限制主要体现在以下几点：")]),e._v(" "),a("ul",[a("li",[e._v("需要满足"),a("code",[e._v("domain")]),e._v("和"),a("code",[e._v("path")]),e._v("的作用域约束")]),e._v(" "),a("li",[e._v("每个域的cookie的总数是有限制的，不同浏览器肯可能限制大小有所不同")]),e._v(" "),a("li",[e._v("浏览器对cookie的大小也有限制，不同浏览器的上限也不同")])]),e._v(" "),a("p",[e._v("Cookie最早是用来作为客户端存储的一种手段的，但是随着"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Storage",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Storage")]),e._v("API"),a("OutboundLink")],1),e._v("的兴起，我们已经不需要它来承担存储性的工作了。")]),e._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP Headers：Set-Cookie - MDN"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cookies - MDN"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://web.dev/samesite-cookies-explained/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SameSite cookies explained"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.netsparker.com/blog/web-security/same-site-cookie-attribute-prevent-cross-site-request-forgery/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using the Same-Site Cookie Attribute to Prevent CSRF Attacks"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);