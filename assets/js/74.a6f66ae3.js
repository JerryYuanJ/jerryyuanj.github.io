(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{604:function(e,t,a){"use strict";a.r(t);var r=a(55),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"q-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[e._v("#")]),e._v(" Q&A")]),e._v(" "),a("p",[e._v("前面几个章节，我们基本上学完了 snabbdom 的原理，包括 vnode，patch，modules，thunks 等相关的介绍，但是 snabbdom 还有一些其它重要的逻辑我们介绍主流程的时候忽略了，这里我们补充介绍以下三点：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("diff")]),e._v("：当新旧节点都包含 children 时，snabbdom 是如何比对的？")]),e._v(" "),a("li",[a("code",[e._v("createRmCb")]),e._v("：为什么在移除节点时需要用这个函数来包一层？")]),e._v(" "),a("li",[a("code",[e._v("insertedVnodeQueue")]),e._v("：多次出现的 insertedVnodeQueue 到底有啥用？")])]),e._v(" "),a("p",[e._v("带着这三个问题，我们来看源码。")]),e._v(" "),a("h2",{attrs:{id:"diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[e._v("#")]),e._v(" diff")]),e._v(" "),a("h2",{attrs:{id:"creatermcb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creatermcb"}},[e._v("#")]),e._v(" createRmCb")]),e._v(" "),a("h2",{attrs:{id:"insertedvnodequeue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insertedvnodequeue"}},[e._v("#")]),e._v(" insertedVnodeQueue")])])}),[],!1,null,null,null);t.default=s.exports}}]);